version: '3.3'
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "8888:80"
    environment:
      - VIRTUAL_HOST=localhost,127.0.0.1,192.168.1.208
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./osmaxx:/home/py/osmaxx
      - ./web_frontend:/home/py/web_frontend
      - ./conversion_service:/home/py/conversion_service
    ports:
      - "8000:8000"
    environment:
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECRET_KEY=insecure!1
      - DJANGO_SETTINGS_MODULE=web_frontend.config.settings.local
      - DJANGO_DEBUG=true
      # set these if you want to be able to log in using OSM
      - SOCIAL_AUTH_OPENSTREETMAP_KEY=
      - SOCIAL_AUTH_OPENSTREETMAP_SECRET=
#     Allow access from any private-use IP, since docker assigns "random" IPs.
#     172.*.*.* is actually allowing too much, but this docker-compose file should
#     only ever be used on local development machine, anyway!
      - DJANGO_INTERNAL_IPS=172.*.*.*,10.*.*.*,192.168.*.*,127.0.0.1
      - DJANGO_DEFAULT_FROM_EMAIL=webmaster@osmaxx.exmaple.com
      - DJANGO_SERVER_EMAIL=webmaster@osmaxx.exmaple.com
      - OSMAXX_ACCOUNT_MANAGER_EMAIL=webmaster@osmaxx.exmaple.com
      - DJANGO_LOG_LEVEL=INFO
  mediator:
    build:
      context: .
      dockerfile: Dockerfile.mediator
    ports:
      - "8901:8901"
    volumes:
      - ./osmaxx:/home/py/osmaxx
      - ./web_frontend:/home/py/web_frontend
      - ./conversion_service:/home/py/conversion_service
    command: [honcho, -f, ./conversion_service/Procfile.mediator.dev, start]
    environment:
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECRET_KEY=insecure!2
      - DJANGO_SETTINGS_MODULE=conversion_service.config.settings.local
      - DJANGO_DEBUG=true
      - DJANGO_LOG_LEVEL=INFO
  worker: &worker
    volumes:
      - ./osmaxx:/home/py/osmaxx
      - ./web_frontend:/home/py/web_frontend
      - ./conversion_service:/home/py/conversion_service
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - DJANGO_SECRET_KEY=insecure!3
  worker-exclusive:
    environment:
      - DJANGO_SECRET_KEY=insecure!4
  osm-pbf-updater:
    build:
      context: osm_pbf_updater/
      dockerfile: Dockerfile
    volumes:
      - osm_data:/var/data/osm-planet
    entrypoint: /bin/sh -c
    command: >
      "
      mkdir -p /var/data/osm-planet/pbf &&
      wget -O /tmp/monaco-latest.osm.pbf http://download.geofabrik.de/europe/monaco-latest.osm.pbf &&
      wget -O /tmp/switzerland-latest.osm.pbf http://download.geofabrik.de/europe/switzerland-latest.osm.pbf &&
      osmconvert /tmp/monaco-latest.osm.pbf -o=/tmp/monaco-latest.osm &&
      osmconvert /tmp/switzerland-latest.osm.pbf -o=/tmp/switzerland-latest.osm &&
      osmconvert /tmp/monaco-latest.osm /tmp/switzerland-latest.osm -o=/var/data/osm-planet/pbf/planet-latest.osm.pbf
      "
    # these are just examples
    # environment:
      # - osmupdate_extra_params=--base-url=download.geofabrik.de/europe/switzerland-updates/
      # - osm_planet_mirror=http://download.geofabrik.de/
      # - osm_planet_path_relative_to_mirror=europe/switzerland-latest.osm.pbf
  osmboundaries-database:
    command: postgres -B 1GB -F -S 1GB
    ports:
      - "5442:5432"
